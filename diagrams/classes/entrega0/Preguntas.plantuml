@startuml Preguntas

skinparam monochrome true
hide circle
skinparam classAttributeIconSize 0

interface Pregunta <<Interface>> {
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
    + responder(respuestas: List<Respuesta>): PuntajeParcial
}

class PreguntaVF {
    - pregunta:String
    - opcionCorrecta:OpcionCorrecta
    - opcionIncorrecta:OpcionIncorrecta
    - tematica: String
    - textoRespuesta: String
    + PreguntaVF()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
    + responder(respuestas: List<Respuesta>): PuntajeParcial
}

class PreguntaVFPenalidad{
    - pregunta:String
    - opcionCorrecta:OpcionCorrecta
    - opcionIncorrecta:OpcionIncorrecta
    - tematica: String
    - textoRespuesta: String
    + PreguntaVFPenalidad()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
    + responder(respuestas: List<Respuesta>): PuntajeParcial
}

class PreguntaMC {
    - pregunta:String
    - opciones: List<Opcion>
    - tematica: String
    - textoRespuesta: String
    + PreguntaMC()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + responder(List<Repuesta> respuestas):PuntajeParcial
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
}

class PreguntaMCParcial {
    - pregunta:String
    - opciones: List<Opcion>
    - tematica: String
    - textoRespuesta: String
    + PreguntaMCParcial()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + responder(List<Repuesta> respuestas):PuntajeParcial
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
}

class PreguntaMCPenalidad {
    - pregunta:String
    - opciones: List<Opcion>
    - tematica: String
    - textoRespuesta: String
    + PreguntaMCPenalidad()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + responder(List<Repuesta> respuestas):PuntajeParcial
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
}

class PreguntaOC {
    - pregunta:String
    - opciones: List<Opcion>
    - ordenCorrecto: Orden
    - tematica: String
    - textoRespuesta: String
    + PreguntaOC()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + responder(respuestas: List<Respuesta>): PuntajeParcial
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
}

class PreguntaGC {
    - pregunta:String
    - unGrupo: Grupo
    - otroGrupo: Grupo
    - tematica: String
    - textoRespuesta: String
    + PreguntaGC()
    + getPregunta(): String
    + getOpciones(): List<Opcion>
    + responder(respuestas: List<Respuesta>): PuntajeParcial
    + getTipo():String
    + getTematica():String
    + getTextoRespuesta(): String
}

Pregunta <|.down. PreguntaVF
Pregunta <|.down. PreguntaVFPenalidad
Pregunta <|.down. PreguntaMC
Pregunta <|.left. PreguntaOC
Pregunta <|.right. PreguntaGC
Pregunta <|.up.. PreguntaMCParcial
Pregunta <|.up.. PreguntaMCPenalidad

@enduml